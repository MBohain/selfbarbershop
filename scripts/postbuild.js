// Script qui s'ex√©cute apr√®s le build pour configurer la production
const { execSync } = require('child_process');

try {
  console.log('üöÄ Configuration post-build...');
  
  // D√©finir les variables d'environnement par d√©faut si pas d√©finies
  if (!process.env.DATABASE_URL) {
    process.env.DATABASE_URL = 'file:./production.db';
  }
  if (!process.env.JWT_SECRET) {
    process.env.JWT_SECRET = 'selfbarbershop-admin-secret-key-2025';
  }

  console.log('üìä Variables d\'environnement:');
  console.log('DATABASE_URL:', process.env.DATABASE_URL ? '‚úÖ D√©fini' : '‚ùå Manquant');
  console.log('JWT_SECRET:', process.env.JWT_SECRET ? '‚úÖ D√©fini' : '‚ùå Manquant');

  // Tenter de configurer la base de donn√©es si en production
  if (process.env.VERCEL && process.env.DATABASE_URL) {
    console.log('üóÑÔ∏è Configuration de la base de donn√©es...');
    try {
      execSync('npx prisma db push --force-reset', { stdio: 'inherit' });
      execSync('npx tsx scripts/setup-production.js', { stdio: 'inherit' });
      console.log('‚úÖ Base de donn√©es configur√©e');
    } catch (error) {
      console.warn('‚ö†Ô∏è Erreur configuration base:', error.message);
    }
  }

  console.log('‚úÖ Post-build termin√©');
} catch (error) {
  console.warn('‚ö†Ô∏è Erreur post-build:', error.message);
  // Ne pas faire √©chouer le d√©ploiement
}
